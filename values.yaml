# Default values for shared-volume umbrella chart
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  kubernetesClusterDomain: cluster.local

# Shared Volume Controller configuration
sharedVolume:
  enabled: true
  
  image:
    registry: docker.io
    repository: sharedvolume/shared-volume-controller
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi
  
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  
  rbac:
    create: true
  
  webhook:
    enabled: true
    port: 9443
    certManager:
      enabled: true
    failurePolicy: Fail
    
  networkPolicy:
    enabled: false
    webhookNamespaceLabel: "webhook: enabled"
  
  metrics:
    enabled: true
    port: 8080
    serviceMonitor:
      enabled: false
      namespace: ""
      interval: 30s
      scrapeTimeout: 10s
  
  healthProbe:
    port: 8081
  
  leaderElection:
    enabled: true
    leaseDuration: 15s
    renewDeadline: 10s
    retryPeriod: 2s

  # Volume Syncer Image configuration
  # This controls what image the Shared Volume Controller will use when creating volume syncer pods
  # If set, this will be passed as VOLUME_SYNCER_IMAGE environment variable
  # to the controller. If not set, controller will use default: sharedvolume/volume-syncer:0.0.18
  volumeSyncerImage: ""

# NFS Server dependency configuration
nfs-server:
  enabled: true
  
  image:
    registry: docker.io
    repository: sharedvolume/nfs-server-controller
    tag: "latest"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi
  
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  
  rbac:
    create: true
  
  metrics:
    enabled: true
    port: 8080
  
  healthProbe:
    port: 8081
  
  leaderElection:
    enabled: true
  
  # NFS Server Image configuration
  # This controls what image the NFS Server Controller will use when creating NFS server pods
  # If set, this will be passed as NFS_SERVER_IMAGE environment variable
  # to the controller. If not set, controller will use default: sharedvolume/nfs-server:0.0.3-alpine-3.22.0
  nfsServerImage: ""

# cert-manager dependency configuration
cert-manager:
  enabled: true
  
  # Install CRDs as part of the release
  installCRDs: true
  
  # Create namespace if it doesn't exist
  createNamespace: true
  
  # Global configuration
  global:
    leaderElection:
      namespace: "cert-manager"
  
  # Webhook configuration
  webhook:
    replicaCount: 1
    
  # CA Injector configuration
  cainjector:
    replicaCount: 1
    
  # Startupapicheck configuration
  startupapicheck:
    enabled: true

# CSI Driver NFS dependency configuration  
csi-driver-nfs:
  enabled: true
  
  # Image configuration
  image:
    nfs:
      repository: registry.k8s.io/sig-storage/nfsplugin
      tag: v4.11.0
      pullPolicy: IfNotPresent
    csiProvisioner:
      repository: registry.k8s.io/sig-storage/csi-provisioner
      tag: v3.6.0
      pullPolicy: IfNotPresent
    csiSnapshotter:
      repository: registry.k8s.io/sig-storage/csi-snapshotter
      tag: v6.3.0
      pullPolicy: IfNotPresent
    livenessProbe:
      repository: registry.k8s.io/sig-storage/livenessprobe
      tag: v2.11.0
      pullPolicy: IfNotPresent
    nodeDriverRegistrar:
      repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
      tag: v2.9.0
      pullPolicy: IfNotPresent
  
  # Controller configuration
  controller:
    replicas: 1
    
  # Feature gates
  feature:
    enableFSGroupPolicy: true
    enableInlineVolume: false
